#!/usr/bin/env bash
set -e
src=$1
pair=$2
base=${pair:0:3}
quote=${pair:3:6}

# TODO - error checking & response formatting
case $src in
  binance) {
    json=$(curl -sS "https://www.binance.com/api/v3/ticker/price?symbol=${pair^^}")
    printf "%.10f\n" $(jshon <<<"$json" -e price -u)
  };;
  bitfinex) {
    json=$(curl -sS "https://api.bitfinex.com/v2/ticker/t${pair^^}")
    printf "%.10f\n" $(jshon <<<"$json" -e 6)
  };;
  bitstamp) {
    json=$(curl -sS "https://www.bitstamp.net/api/v2/ticker/${pair,,}/")
    printf "%.10f\n" $(jshon <<<"$json" -e last -u)
  };;
  bittrex) {
    json=$(curl -sS "https://api.bittrex.com/api/v1.1/public/getticker?market=${base^^}-${quote^^}")
    printf "%.10f\n" $(jshon <<<"$json" -e result -e Last -u) # BTC
  };;
  cmc) {
    ticker=$(case "${pair^^}" in
      USDTUSD) { echo "825";  };;
      POLYUSD) { echo "2496"; };;
    esac)
    json=$(curl -sS "https://api.coinmarketcap.com/v2/ticker/$ticker/")
    printf "%.10f\n" $(jshon <<<"$json" -e data -e quotes -e USD -e price -u)
  };;
  coinbase) {
    json=$(curl -sS "https://api.gdax.com/products/${base^^}-${quote^^}/ticker")
    printf "%.10f\n" $(jshon <<<"$json" -e price -u)
  };;
  gemini) {
    json=$(curl -sS "https://api.gemini.com/v1/pubticker/${pair,,}")
    printf "%.10f\n" $(jshon <<<"$json" -e last -u)
  };;
  hitbtc) {
    json=$(curl -sS "https://api.hitbtc.com/api/2/public/ticker/${pair^^}/")
    printf "%.10f\n" $(jshon <<<"$json" -e last -u)
  };;
  huobi) {
    json=$(curl -sS "https://api.huobi.pro/market/detail/merged?symbol=${pair,,}")
    printf "%.10f\n" $(jshon <<<"$json" -e tick -e bid -e 0)
  };;
  kraken) {
    json=$(curl -sS "https://api.kraken.com/0/public/Ticker?pair=${pair^^}")
    printf "%.10f\n" $(jshon <<<"$json" -e result -e X${base^^}Z${quote^^} -e c -e 0 -u)
  };;
  poloniex) {
    json=$(curl -sS "https://poloniex.com/public?command=returnTicker")
    printf "%.10f\n" $(jshon <<<"$json" -e ${base^^}_${quote^^} -e last -u)
  };;
  upbit) {
    json=$(curl -sS "https://api.upbit.com/v1/ticker?markets=${quote^^}-${base^^}")
    printf "%.10f\n" $(jshon <<<"$json" -e 0 -e trade_price) #KRW
  };;
  all) {
    echo "TODO"
  };;
  *) {
    echo >&2 "Error: exchange not recognised: $src"
  };;
esac
